{"version":3,"sources":["components/Button.js","components/WhoIsGettingVaccinated.js","components/ScreeningQuestion.js","components/DoesNotQualify.js","components/Screening.js","components/InfoCollector.js","components/App.js","index.js"],"names":["Button","_ref","description","onClickAction","react_default","a","createElement","className","onClick","WhoIsGettingVaccinated","state","responseNumber","handleResponse","_this","setState","props","includeConsentProvider","includeDependants","showScreening","showInfoCollector","_this2","this","components_Button","Component","ScreeningQuestion","handleRadioChange","question","inputName","type","name","value","onChange","e","DoesNotQualify","consentProvider","dependantsExist","consenterIsRecievingVaccine","resetForm","Screening","firstName","lastName","qualifies","screeningQuestion1","screeningQuestion2","screeningQuestion3","screeningQuestion4","screeningQuestion5","screeningQuestion6","screeningQuestion7","screeningQuestions","concat","handleByPass","addNewVaccineRecipiant","target","innerHTML","setAutoApproveScreening","handleChange","Object","defineProperty","id","stateName","stateValue","renderInstructions","renderScreeningQuestions","map","components_ScreeningQuestion","indexOf","key","action","htmlFor","components_DoesNotQualify","InfoCollector","infoFirstName","infoLastName","dateOfBirth","address","healthCard","telephoneNumber","relationToDependants","saveAddress","saveNumber","consentGranted","displayOtherRelationshipField","handleCheckBoxChange","setConsentProvider","console","log","defaultFirstName","defaultLastName","addConsentProvider","numberOfPatients","handleAddDependant","autoApproveScreening","removeDefaultNames","storeReusableInfo","aVaccineRecipiantHasBeenCreated","addPatientDetails","resetForNewPatient","handleComplete","addressSaved","telephoneNumberSaved","phoneNumber","otherRelationship","App","showWhoIsGettingVaccinatedOptions","showScreeningQuestions","questionNumber","vaccineReceipiantInfo","save","updateVaccineReceipiantInfo","push","updatedVaccineReceipiantInfo","patientRecord","filter","infoItem","consentProvidedBy","table","components_WhoIsGettingVaccinated","moveToNextQuestion","components_Screening","components_InfoCollector","length","ReactDOM","render","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.0126dfde.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\nconst Button = ({description, onClickAction}) => {\n    return (\n        <div className=\"button\">\n            <button onClick={onClickAction}>{description}</button>\n        </div>\n    );\n}\n\nexport default Button;","import React, { Component } from \"react\";\n\nimport Button from './Button';\n\n\nclass WhoIsGettingVaccinated extends Component {\n    state = { responseNumber: 0 }\n\n    \n    handleResponse = (responseNumber) => {\n        this.setState({\n            responseNumber\n        }, () => {\n            if (responseNumber === 1) {\n                this.props.includeConsentProvider();\n                this.props.includeDependants();\n                this.props.showScreening();\n            } else if (responseNumber === 2) {\n                this.props.includeDependants();\n                this.props.showInfoCollector();\n            } else {\n                this.props.includeConsentProvider();\n                this.props.showScreening();\n            }\n        });\n    }\n\n    \n    render() {\n        return (\n            < div className = \"whoIsGettingVaccinated\" >\n                <div className=\"question\">\n                    <h2>Who are you providing consent for today?</h2>\n                </div>\n                <div className=\"whoIsGettingVaccinated__answerOptions\">\n                    < Button \n                        description=\"Both myself, and my dependant(s)\"\n                        onClickAction={() => this.handleResponse(1)}\n                    / >\n                    < Button \n                        description=\"I am consenting on behalf of my dependant(s)\" \n                        onClickAction={() => this.handleResponse(2)}\n                    / >\n                    < Button\n                        description=\"I am consenting on my own behalf\" \n                        onClickAction={() => this.handleResponse(3)}\n                    / >\n                </div>                \n            </div>\n        );\n    }\n\n\n\n\n}\n\n\nexport default WhoIsGettingVaccinated;","import React, { Component } from \"react\";\n\n\nconst ScreeningQuestion = ({ handleRadioChange, question, inputName }) => {\n    return (\n        <div className=\"screeningQuestion\">\n            <div className=\"screeningQuestion__question\">\n                <p>{question}</p>\n            </div>\n            <div className=\"screeningQuestion__answerOptions\">\n                <input type=\"radio\" name={inputName} value=\"yes\" onChange={(e) => handleRadioChange(e)}/>\n                <input type=\"radio\" name={inputName} value=\"no\" onChange={(e) => handleRadioChange(e)}/>\n            </div>\n        </div>\n    );\n}\n\n\nexport default ScreeningQuestion;","import React, { Component } from \"react\";\n\nimport Button from './Button';\n\n\nconst DoesNotQualify = ({ consentProvider, dependantsExist, consenterIsRecievingVaccine, resetForm }) => {\n    if (!consentProvider && dependantsExist) {\n        return (\n            <div className=\"doesNotQualify\">\n                <div className=\"message\">\n                    <p>I'm sorry, you are not eligible to receive a flu shot at this time. Would you like to continue to provide concent for your dependants?</p>\n                </div>\n                < div className=\"doesNotQualify__options\" >\n                    <Button description=\"Yes\"/>\n                    <Button description=\"No\" onClickAction={resetForm}/>\n                </div>\n            </div>\n        )\n    }\n    if (consentProvider && dependantsExist) {\n        return (\n            <div className=\"doesNotQualify\">\n                <div className=\"message\">\n                    <p>I'm sorry, this individual is not eligible to receive a flu shot at this time. Would you like to continue to provide concent for another dependant?</p>\n                </div>\n                < div className=\"doesNotQualify__options\" >\n                    <Button description=\"Yes\"/>\n                    <Button description=\"No\" onClickAction={resetForm}/>\n                </div>\n            </div>\n        )\n    }\n    if (consenterIsRecievingVaccine && !dependantsExist) {\n        return (\n            <div className=\"doesNotQualify\">\n                <div className=\"message\">\n                    <p>I'm sorry, you are not eligible to receive a flu shot at this time.</p>\n                </div>\n                < div className=\"doesNotQualify__options\" >\n                    <Button description=\"OK\" onClickAction={resetForm}/>\n                </div>\n            </div>\n        )\n    }\n    \n    \n    \n}\n\nexport default DoesNotQualify;","import React, { Component } from \"react\";\n\nimport Button from './Button';\nimport ScreeningQuestion from './ScreeningQuestion';\nimport DoesNotQualify from './DoesNotQualify';\n\n\nclass Screening extends Component {\n    state = {\n        firstName: '',\n        lastName: '',\n        qualifies: true,\n        screeningQuestion1: '',\n        screeningQuestion2: '',\n        screeningQuestion3: '',\n        screeningQuestion4: '',\n        screeningQuestion5: '',\n        screeningQuestion6: '',\n        screeningQuestion7: ''\n    } \n\n    screeningQuestions = [\n        `Are ${this.props.consentProvider ? 'they' : 'you'} sick today (i.e., fever greater than 39.5°C, breathing problems, active infection)?`,\n        `Do ${this.props.consentProvider ? 'they' : 'you'} have an allergy to eggs or egg products?`,\n        `Do ${this.props.consentProvider ? 'they' : 'you'} have an allergy to any of the components of the flu vaccine (e.g., gentamicin, neomycin, kanamycin, thimerosal, formaldehyde)?`,\n        `Do ${this.props.consentProvider ? 'they' : 'you'} take a blood thinner or have a bleeding disorder?`,\n        `Have ${this.props.consentProvider ? 'they' : 'you'} had a serious reaction to influenza vaccine in the past?`,\n        `Do ${this.props.consentProvider ? 'they' : 'you'} have a new or changing condition affecting the brain or nervous system?`,\n        `Have ${this.props.consentProvider ? 'they' : 'you'} ever had Guillain-Barré syndrome?`\n    ]\n\n    handleByPass = (e) => {\n        if(this.state.firstName && this.state.lastName) {\n            this.props.addNewVaccineRecipiant(this.state.firstName, this.state.lastName);\n            this.props.showInfoCollector();\n        }\n        if (e.target.innerHTML === \"None of these apply to anyone I am providing consent for\") {\n            this.props.setAutoApproveScreening();\n        }\n    }\n\n\n\n    handleChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    handleRadioChange = (e) => {\n        let stateName = e.target.name;\n        let stateValue = e.target.value;\n        this.setState({ [stateName]: stateValue }, () => {\n            if (stateValue === 'no') {\n                this.setState({ qualifies: false });\n            }\n            if (this.state.screeningQuestion1 === 'yes' && this.state.screeningQuestion2 === 'yes' && this.state.screeningQuestion3 === 'yes' && this.state.screeningQuestion4 === 'yes' && this.state.screeningQuestion5 === 'yes' && this.state.screeningQuestion6 === 'yes' && this.state.screeningQuestion7 === 'yes' && this.state.firstName && this.state.lastName) {\n                this.props.addNewVaccineRecipiant(this.state.firstName, this.state.lastName);\n                this.props.showInfoCollector();\n            }\n        });\n    }\n\n    renderInstructions = () => {\n        if (this.props.consenterIsRecievingVaccine && this.props.dependantsExist) {\n            return (\n                <h2>Starting with yourself, please provide the following information</h2>\n            );\n        } else if (this.props.consenterIsRecievingVaccine) {\n            return (\n                <h2>Please provide the following information</h2>\n            );\n        } else {\n            return (\n                <h2>Please provide the following information for the first person to be vaccinated.</h2>\n            );\n        }\n    }\n\n    renderScreeningQuestions = () => {\n        const renderedQuestions = this.screeningQuestions.map((question) => {\n            return (\n                <ScreeningQuestion\n                    question={question}\n                    inputName={`screeningQuestion${(this.screeningQuestions.indexOf(question)) + 1}`}\n                    handleRadioChange={this.handleRadioChange}\n                    key={this.screeningQuestions.indexOf(question)}\n                />\n            );\n        });\n        return renderedQuestions;\n    }\n\n\n    render() {\n        return(\n            <div className=\"screening\">\n                {this.state.qualifies ? (\n                <div className=\"screening__questionnaire\">\n                    <div className=\"question\">\n                        {this.renderInstructions()}\n                    </div>\n                    <form action=\"\" className=\"screening__name\">\n                        < div className = \"input input__text\" >\n                            <label htmlFor=\"firstName\">First Name</label>\n                            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} value={this.state.firstName} />\n                        </div>\n                        < div className = \"input input__text\" >\n                            <label htmlFor=\"lastName\">Last Name</label>\n                            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} value={this.state.lastName}/>\n                        </div>\n                    </form>\n                    <form className=\"screening__questions\">\n                        <div className=\"screening__columnHeadings\">\n                            <div className=\"screening__title\">\n                                <h3>Screening Questions</h3>\n                            </div>\n                            <div className=\"screening__inputTitles\">\n                                <h3>Yes</h3>\n                                <h3>No</h3>\n                            </div>\n                        </div>\n                        {this.renderScreeningQuestions()}\n                    </form>\n                    <div className=\"screening__byPass\">\n                        {this.props.dependantsExist ? \n                        <div className=\"screening__byPassOption\">\n                            <Button \n                                description={'None of these apply to anyone I am providing consent for'} \n                                onClickAction={this.handleByPass}\n                            />\n\n                        </div>\n                        : null}\n                        <div className=\"screening__byPassOption\">\n                            <Button description={'No to all'} onClickAction={this.handleByPass} />\n                        </div>\n                    </div>\n                </div>\n                ) : null}\n                {!this.state.qualifies ? (\n                    <DoesNotQualify \n                        consenterIsRecievingVaccine={this.props.consenterIsRecievingVaccine}\n                        dependantsExist={this.props.dependantsExist}\n                        consentProvider={this.props.consentProvider}\n                        resetForm={this.props.resetForm}\n                    />\n                ) : null}\n            </div>\n        )\n    }\n\n\n}\n\nexport default Screening;","import React, { Component } from \"react\";\n\nimport Button from './Button';\n\nclass InfoCollector extends Component {\n    state = {\n        infoFirstName: '',\n        infoLastName: '',\n        dateOfBirth: '',\n        address: '',\n        healthCard: '',\n        telephoneNumber: '',\n        relationToDependants: '',\n        saveAddress: false,\n        saveNumber: false,\n        consentGranted: false,\n        displayOtherRelationshipField: false\n    }\n    \n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n\n    handleCheckBoxChange = (e) => {\n        // let save = this.state[e.target.id];\n        // let state = e.target.name;\n        // let value = this.state[e.target.name];\n        this.setState({\n            [e.target.id]: !this.state[e.target.id]\n        }\n        // , () => this.props.storeReusableInfo(save, state, value) //cool idea - needs work.\n        );\n    }\n    //think about a way to update saved value when its changed after the checkbox is clicked\n\n    handleRadioChange = (e) => {\n        const id = e.target.id\n        this.setState({\n            [e.target.name]: e.target.value\n        }, () => {\n            if (id === \"otherRadio\") {\n                this.setState({ displayOtherRelationshipField: true });\n            } else {\n                this.setState({ displayOtherRelationshipField: false });\n            }\n        });\n    }\n\n    setConsentProvider = () => {\n        console.log('run cdm');\n        if (this.props.consentProvider === \"\") {\n            this.setState({\n                infoFirstName: this.props.defaultFirstName,\n                infoLastName: this.props.defaultLastName\n            }, this.props.addConsentProvider(this.state.infoFirstName, this.state.infoLastName));\n        }\n    }\n\n    renderInstructions = () => {\n        if (!this.props.consenterIsRecievingVaccine && !this.props.consentProvider) {\n            return (<h2>Please provide the following details to provide Consent.</h2>);\n        } else if (this.props.consenterIsRecievingVaccine && !this.props.dependantsExist) {\n            return (<h2>Please provide your details below.</h2>)\n        } else if (this.props.consenterIsRecievingVaccine && this.props.dependantsExist && this.props.numberOfPatients === 1) {\n            return (<h2>Please enter your patient and consent details.</h2>);\n        } else if (this.props.dependantsExist && ((this.props.consenterIsRecievingVaccine && this.props.numberOfPatients > 1) || (!this.props.consenterIsRecievingVaccine && this.props.numberOfPatients >= 1))) {\n            return (<h2>Please enter the following details for your dependant.</h2>)\n        }\n    } \n\n\n    handleAddDependant = () => {\n        if (this.props.autoApproveScreening) {\n            this.props.removeDefaultNames();\n        }\n        if (this.state.saveAddress) {\n            this.props.storeReusableInfo(this.state.saveAddress, 'address', this.state.address);\n        }\n        if (this.state.saveNumber) {\n            this.props.storeReusableInfo(this.state.saveNumber, 'telephoneNumber', this.state.telephoneNumber);\n        }\n        if (!this.props.consentProvider) {\n            console.log('run hd');\n            this.props.addConsentProvider(`${this.state.infoFirstName} ${this.state.infoLastName}`);\n        }\n        if(this.props.aVaccineRecipiantHasBeenCreated || this.props.autoApproveScreening){\n            this.props.addPatientDetails({\n                firstName: this.state.infoFirstName,\n                lastName: this.state.infoLastName,\n                healthCard: this.state.healthCard,\n                dateOfBirth: this.state.dateOfBirth,\n                address: this.state.address,\n                telephoneNumber: this.state.telephoneNumber,\n                consentProvider: `${this.state.infoFirstName} ${this.state.infoLastName}`,\n                consentGranted: this.state.consentGranted\n            });\n        }\n        if (!this.props.autoApproveScreening) {\n            this.props.showScreening();\n        } else {\n            this.resetForNewPatient();\n        }\n    }\n\n    resetForNewPatient = () => {\n        this.setState({\n            infoFirstName: '',\n            infoLastName: '',\n            dateOfBirth: '',\n            address: '',\n            healthCard: '',\n            telephoneNumber: ''\n        });\n    }\n\n    handleComplete = () => {\n        this.props.addPatientDetails({\n            firstName: this.state.infoFirstName,\n            lastName: this.state.infoLastName,\n            healthCard: this.state.healthCard,\n            dateOfBirth: this.state.dateOfBirth,\n            address: this.state.address,\n            telephoneNumber: this.state.telephoneNumber,\n            consentProvider: `${this.state.infoFirstName} ${this.state.infoLastName}`,\n            consentGranted: this.state.consentGranted\n        });\n    }\n    \n    componentDidMount() {\n        this.setConsentProvider();\n    }\n    \n    render() {\n        return (\n            <div className=\"infoCollector\">\n                <div className=\"question\">\n                    {this.renderInstructions()}\n                </div>\n                <form className=\"infoCollector__form\">\n                    <div className=\"infoCollector__section\">\n                        <div className=\"infoCollector__infoItem\">\n                            <div className=\"input input__text\">\n                                <label htmlFor=\"infoFirstName\">First Name</label>\n                                <input type=\"text\" id=\"infoFirstName\" onChange={this.handleChange} value={this.props.defaultFirstName ? this.props.defaultFirstName : this.state.firstName} />\n                            </div>\n                        </div>\n                        <div className=\"infoCollector__infoItem\">\n                            <div className=\"input input__text input__text--toEnd\">\n                                <label htmlFor=\"infoLastName\">Last Name</label>\n                                <input type=\"text\" id=\"infoLastName\" onChange={this.handleChange} value={this.props.defaultLastName ? this.props.defaultLastName : this.state.lastName}/>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"infoCollector__section\">\n                        {!this.props.addressSaved ? \n                            <div className=\"infoCollector__infoItem\">\n                                <div className=\"input input__text\">\n                                    <label htmlFor=\"address\">Address</label>\n                                    <input type=\"text\" id=\"address\" onChange={this.handleChange} value={this.state.address}/>\n                                    {this.props.dependantsExist ? \n                                    <div className=\"input__checkBox\">\n                                        <label htmlFor=\"saveAddress\">Use this address for dependant(s)?</label>\n                                        <input type=\"checkbox\" id=\"saveAddress\" name=\"address\" onClick={this.handleCheckBoxChange}/>\n                                    </div>\n                                    : null}\n                                </div>\n                            </div>\n                        : null}\n                        {!this.props.telephoneNumberSaved ?\n                            <div className=\"infoCollector__infoItem\">\n                                <div className=\"input input__text input__text--toEnd\">\n                                    <label htmlFor=\"telephoneNumber\">Phone Number</label>\n                                    <input type=\"text\" id=\"telephoneNumber\" onChange={this.handleChange} value={this.state.phoneNumber}/>\n                                    {this.props.dependantsExist ? \n                                    <div className=\"input__checkBox\">\n                                        <label htmlFor=\"saveNumber\">Use this number for dependant(s)?</label>\n                                        <input type=\"checkbox\" id=\"saveNumber\" name=\"telephoneNumber\" onClick={this.handleCheckBoxChange}/>\n                                    </div>\n                                    : null}\n                                </div>\n                            </div>\n                        : null}\n                    </div>\n                    {(!this.props.consenterIsRecievingVaccine && !this.props.aVaccineRecipiantHasBeenCreated) ? null :\n                    <div className=\"infoCollector__section\">\n                        <div className=\"infoCollector__infoItem\">\n                            <div className=\"input input__text\">\n                                <label htmlFor=\"dateOfBirth\">Date Of Birth</label>\n                                <input type=\"text\" id=\"dateOfBirth\" onChange={this.handleChange} value={this.state.dateOfBirth}/>\n                            </div>\n                        </div>                   \n                        <div className=\"infoCollector__infoItem\">\n                            <div className=\"input input__text input__text--toEnd\">\n                                <label htmlFor=\"healthCard\">Health Card</label>\n                                <input type=\"text\" id=\"healthCard\" onChange={this.handleChange} value={this.state.healthCard}/>\n                            </div>\n                        </div>                    \n                    </div>\n                    }\n                    {!this.props.consentProvider && this.props.dependantsExist ?\n                    <div>\n                        <div className=\"infoCollector__sectionHeading\">\n                            <p>Relationship to Dependant(s)</p>\n                        </div>\n                        <div className=\"infoCollector__section\">\n                            <div className=\"infoCollector__infoItem infoCollector__infoItem--radioContainer\">\n                                <div className=\"input input__radio\">\n                                    <label htmlFor=\"parent\">Parent</label>\n                                    <input type=\"radio\" name=\"relationToDependants\" id=\"parent\" onChange={this.handleRadioChange} value=\"parent\"/>\n                                </div>\n                                <div className=\"input input__radio\">\n                                    <label htmlFor=\"guardian\">Guardian</label>\n                                    <input type=\"radio\" name=\"relationToDependants\" id=\"guardian\" onChange={this.handleRadioChange} value=\"guardian\"/>\n                                </div>\n                                <div className=\"input input__radio\">\n                                    <label htmlFor=\"otherRadio\">Other</label>\n                                    <input type=\"radio\" name=\"relationToDependants\" id=\"otherRadio\" onChange={this.handleRadioChange} value=\"\"/>\n                                </div>\n                            </div>\n                            {this.state.displayOtherRelationshipField ? \n                            <div className=\"infoCollector__infoItem\">\n                                <div className=\"input input__text input__text--toEnd\"> \n                                    <label htmlFor=\"otherRelationship\">Please Specify</label>\n                                    <input type=\"text\" id=\"relationToDependants\" value={this.state.otherRelationship} onChange={this.handleChange}/>\n                                </div>\n                            </div>\n                            : null}\n                        </div>\n                    </div>\n                    : null }\n                    <div className=\"infoCollector__section infoCollector__section--column\">\n                        <p>{`I ${this.props.consentProvider} give consent for the above patient to receive their vaccination.`}</p>\n                        <div className=\"input__checkBox input__checkBox--addSpaceBelow\">\n                            <label htmlFor=\"consentGranted\">Check for yes</label>\n                            <input type=\"checkbox\" id=\"consentGranted\"  onClick={this.handleCheckBoxChange}/>\n                        </div>\n                    </div>\n                </form>\n                {this.props.dependantsExist ? \n                <Button \n                    description=\"Add a dependant\"\n                    onClickAction={this.handleAddDependant}\n                /> : null}\n                {(this.props.dependantsExist && this.props.numberOfPatients > 1) || !this.props.dependantsExist || (!this.props.consenterIsRecievingVaccine && this.props.numberOfPatients > 0) ?\n                <Button \n                    description=\"Complete\" \n                    onClickAction={this.handleComplete}\n                /> : null}\n            </div>\n        );\n    }\n    \n} \n\nexport default InfoCollector;","import '../styles/style.scss';\n\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\n\nimport Button from './Button';\nimport WhoIsGettingVaccinated from './WhoIsGettingVaccinated';\nimport Screening from './Screening';\nimport InfoCollector from './InfoCollector';\n\n\n\n\nclass App extends Component {\n    state = {\n        showWhoIsGettingVaccinatedOptions: true,\n        showScreeningQuestions: false,\n        showInfoCollector: false,\n        questionNumber: 0,\n        consentProvider: '',\n        consenterIsRecievingVaccine: false,\n        dependantsExist: false,\n        vaccineReceipiantInfo: [],\n        addressSaved: '',\n        telephoneNumberSaved: '',\n        autoApproveScreening: false,\n        defaultFirstName: '',\n        defaultLastName: ''\n    }\n\n\n    includeConsentProvider = () => {\n        this.setState({ consenterIsRecievingVaccine: true });\n    }\n\n    setAutoApproveScreening = () => {\n        this.setState({ autoApproveScreening: true });\n    }\n\n    addConsentProvider = (name) => {\n        this.setState({ consentProvider: name });\n    }\n\n    includeDependants = () => {\n        this.setState({ dependantsExist: true });\n    }\n\n    storeReusableInfo = (save, state, value) => {\n        if (save) {\n            this.setState({ [`${state}Saved`]: value });\n        } else {\n            this.setState({ [`${state}Saved`]: '' });\n        }\n    }\n\n\n    addNewVaccineRecipiant = (firstName, lastName) => {\n        const updateVaccineReceipiantInfo = this.state.vaccineReceipiantInfo;\n        updateVaccineReceipiantInfo.push({ firstName, lastName });\n        this.setState({ \n            vaccineReceipiantInfo: updateVaccineReceipiantInfo,\n            defaultFirstName: firstName,\n            defaultLastName: lastName\n        });\n    }\n\n    removeDefaultNames = () => {\n        this.setState({ \n            defaultFirstName: '',\n            defaultLastName: ''\n        });\n    }\n\n    addPatientDetails = ({ firstName, lastName, healthCard, dateOfBirth, address, telephoneNumber, consentProvider, consentGranted }) => {\n        if (this.state.consentProvider === '') {\n            console.log('run apd');\n            this.addConsentProvider(consentProvider);\n        }\n        if (telephoneNumber === '') {\n            telephoneNumber = this.state.telephoneNumberSaved;\n        }\n        if (address === '') {\n            address = this.state.telephoneNumberSaved;\n        }\n        const updatedVaccineReceipiantInfo = this.state.vaccineReceipiantInfo;\n        let patientRecord = updatedVaccineReceipiantInfo.filter(infoItem => {\n            return infoItem.firstName === firstName && infoItem.lastName === lastName;\n        });\n        if (patientRecord[0]) {\n            console.log(patientRecord[0]);\n            if (this.state.consentProvider) {\n                patientRecord[0].consentProvidedBy = this.state.consentProvider;\n            } else {\n                patientRecord[0].consentProvidedBy = consentProvider; \n            }\n            patientRecord[0].consentGranted = consentGranted;\n            patientRecord[0].healthCard = healthCard;\n            patientRecord[0].dateOfBirth = dateOfBirth;\n            patientRecord[0].address = address;\n            patientRecord[0].telephoneNumber = telephoneNumber;\n            this.setState({ vaccineReceipiantInfo: updatedVaccineReceipiantInfo });\n            console.table(this.state.vaccineReceipiantInfo);\n        } else {\n            updatedVaccineReceipiantInfo.push({ firstName, lastName });\n            patientRecord = updatedVaccineReceipiantInfo.filter(infoItem => {\n                return infoItem.firstName === firstName && infoItem.lastName === lastName;\n            });\n            if (this.state.consentProvider) {\n                patientRecord[0].consentProvidedBy = this.state.consentProvider;\n            } else {\n                patientRecord[0].consentProvidedBy = consentProvider;\n            }\n            patientRecord[0].consentGranted = consentGranted;\n            patientRecord[0].healthCard = healthCard;\n            patientRecord[0].dateOfBirth = dateOfBirth;\n            patientRecord[0].address = address;\n            patientRecord[0].telephoneNumber = telephoneNumber;\n            this.setState({ vaccineReceipiantInfo: updatedVaccineReceipiantInfo });\n            console.table(this.state.vaccineReceipiantInfo);\n        }\n    }\n\n\n    showScreening = () => {\n        this.setState({\n            showWhoIsGettingVaccinatedOptions: false,\n            showInfoCollector: false,\n            showScreeningQuestions: true\n        });\n    } \n\n    showInfoCollector = () => {\n        this.setState({\n            showWhoIsGettingVaccinatedOptions: false,\n            showInfoCollector: true,\n            showScreeningQuestions: false\n        });\n    } \n\n    resetForm = () => {\n        this.setState({\n            showWhoIsGettingVaccinatedOptions: true,\n            showScreeningQuestions: false,\n            questionNumber: 0,\n            consentProvider: null,\n            consenterIsRecievingVaccine: false,\n            dependantsExist: false,\n            vaccineReceipiantInfo: []\n        });\n    }\n\n    \n\n    render() {\n        return (\n            <div className=\"app\">\n                <div className=\"answerContainer\">\n                    {this.state.showWhoIsGettingVaccinatedOptions ? \n                    < WhoIsGettingVaccinated \n                        includeConsentProvider={this.includeConsentProvider}\n                        includeDependants={this.includeDependants}\n                        consenterIsRecievingVaccine={this.state.consenterIsRecievingVaccine}\n                        moveToNextQuestion={this.moveToNextQuestion}\n                        showScreening={this.showScreening}\n                        showInfoCollector={this.showInfoCollector}\n                    / > : null}\n                    {this.state.showScreeningQuestions ? \n                    <Screening\n                        moveToNextQuestion={this.moveToNextQuestion}\n                        consentProvider={this.state.consentProvider}\n                        consenterIsRecievingVaccine={this.state.consenterIsRecievingVaccine}\n                        dependantsExist={this.state.dependantsExist}\n                        addNewVaccineRecipiant={this.addNewVaccineRecipiant}\n                        resetForm={this.resetForm}\n                        showInfoCollector={this.showInfoCollector}\n                        setAutoApproveScreening={this.setAutoApproveScreening} \n                    / > : null}\n                    {this.state.showInfoCollector ? \n                    <InfoCollector\n                        consenterIsRecievingVaccine={this.state.consenterIsRecievingVaccine}\n                        consentProvider={this.state.consentProvider}\n                        defaultFirstName={this.state.defaultFirstName}\n                        defaultLastName={this.state.defaultLastName}\n                        storeReusableInfo={this.storeReusableInfo}\n                        telephoneNumberSaved={this.state.telephoneNumberSaved}\n                        addressSaved={this.state.addressSaved}\n                        dependantsExist={this.state.dependantsExist}\n                        aVaccineRecipiantHasBeenCreated={this.state.vaccineReceipiantInfo[0]}\n                        addPatientDetails={this.addPatientDetails}\n                        showScreening={this.showScreening}\n                        addConsentProvider={this.addConsentProvider}\n                        numberOfPatients={this.state.vaccineReceipiantInfo.length}\n                        autoApproveScreening={this.state.autoApproveScreening}\n                        removeDefaultNames={this.removeDefaultNames}\n                    / > : null}\n                </div>\n            </div>\n        );\n    } \n}\n\n//display the first question asking if the person filling out the form is getting the flu shot or if they are filling out the form for a dependant\n\n//if they are filling it out for a dependant ask if for the total number of dependants\n//if the number of dependants is greater than 1 ask for a list of first/last names\n\n//provide list of screening questions\n\n//if only 1 dependant or just recipiant list questions with checkboxes\n//if recipiant answers 'no' to any alert 'I am sorry but you do not qualify to recieve a flu shot at this time. Please consult your physition for more information'\n\n//if multiple dependants provide scenarios with dependant names listed below and ask to select any that the statements apply to.\n// if recipeian selects any dependant for any statement alert '____ dependant can not proceed ... \n//if there are dependants who can continue, give the option to do so.\n\n//if they are filling it out for themselves provide:\n    //first name, last name, address, dob (calculate age based on dob), healthcard #, tel #\n\n\n//if they are filling it out for multiples provide a list of forms with the names pre populated at the top provide a checkbox for all address' are the same\n//if yes - first question should be for address\n//if no - each form will contain an address field\n\n\nexport default App;","// import './styles/App'\nimport React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}